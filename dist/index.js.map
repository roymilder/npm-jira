{"version":3,"sources":["../src/index.js"],"names":["jsonOptions","noColor","jr","Jira","projects","getProjects","ticket","getTicketDetails","createIssue","cb","prompts","then","response","arr","i","length","push","value","key","name","type","message","choices","default","prompt","answers","project","subject","description","assignee","print","catch","errorHandler","err","msg","console","log","render"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,cAAc;AAChBC,aAAS;AADO,CAApB;;AAIA;AACA,IAAMC,KAAK,yBAAY,iBAAO,sBAAP,CAAZ,CAAX;AACA,IAAMC,OAAO,0BAAgBD,EAAhB,CAAb;AACA,IAAIE,WAAWD,KAAKE,WAAL,EAAf;AACA,IAAIC,SAAS,EAAb;;AAEA;AACAC,iBAAiBJ,KAAKK,WAAtB;;AAGA,SAASD,gBAAT,CAA0BE,EAA1B,EAA8B;AAC1B;;AAEA,QAAIC,UAAU,EAAd;AACAN,aAASO,IAAT,CAAc,UAAUC,QAAV,EAAoB;AAC9B;;AACA,YAAIC,MAAM,EAAV;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,SAASG,MAA7B,EAAqCD,GAArC,EAA0C;AACtCD,gBAAIG,IAAJ,CAAS,EAACC,OAAOL,SAASE,CAAT,EAAYI,GAApB,EAAyBC,MAAMP,SAASE,CAAT,EAAYK,IAA3C,EAAT;AACH;;AAED;AACAT,gBAAQM,IAAR,CAAa;AACTI,kBAAS,MADA;AAETD,kBAAS,SAFA;AAGTE,qBAAS,qBAHA;AAITC,qBAAST,GAJA;AAKTU,qBAAS,iBAAO,sBAAP,EAA+B,YAA/B;AALA,SAAb;;AAQA;AACAb,gBAAQM,IAAR,CAAa;AACTI,kBAAS,MADA;AAETD,kBAAS,MAFA;AAGTE,qBAAS,aAHA;AAITC,qBAAS,iBAAO,kBAAP,CAJA;AAKTC,qBAAS,iBAAO,sBAAP,EAA+B,kBAA/B;AALA,SAAb;;AAQA;AACAb,gBAAQM,IAAR,CAAa;AACTI,kBAAS,QADA;AAETD,kBAAS,SAFA;AAGTE,qBAAS;AAHA,SAAb;AAKA;AACAX,gBAAQM,IAAR,CAAa;AACTI,kBAAS,QADA;AAETD,kBAAS,aAFA;AAGTE,qBAAS;AAHA,SAAb;AAKAX,gBAAQM,IAAR,CAAa;AACTI,kBAAS,QADA;AAETD,kBAAS,UAFA;AAGTE,qBAAS,UAHA;AAITE,qBAAS,iBAAO,sBAAP,EAA+B,UAA/B;AAJA,SAAb;;AAOA,2BAASC,MAAT,CAAgBd,OAAhB,EAAyBC,IAAzB,CAA8B,UAAUc,OAAV,EAAmB;AAC7C,gBAAIA,OAAJ,EAAa;AACTtB,qBAAKK,WAAL,CAAiBiB,QAAQL,IAAzB,EAA+BK,QAAQC,OAAvC,EAAgDD,QAAQE,OAAxD,EAAiEF,QAAQG,WAAzE,EAAuF,iBAAO,uBAAP,EAAgC,mBAAhC,CAAD,GAAyDH,QAAQI,QAAjE,GAA4E,IAAlK,EAAwKlB,IAAxK,CAA6K,UAAUC,QAAV,EAAoB;AAC7LkB,0BAAMlB,QAAN;AACH,iBAFD,EAEGmB,KAFH,CAES,eAAO;AACZC,iCAAaC,IAAIZ,OAAjB;AACH,iBAJD;AAKH,aAND,MAMO;AACHW,6BAAa,sBAAb;AACH;AACJ,SAVD;AAYH,KAxDD;AAyDH;;AAGD,SAASF,KAAT,CAAeI,GAAf,EAAoB;AAChB;;AACA,WAAOC,QAAQC,GAAR,CAAY,qBAAWC,MAAX,CAAkBH,GAAlB,CAAZ,CAAP;AACH;AACD,SAASF,YAAT,CAAsBC,GAAtB,EAA2B;AACvB;;AACA,WAAOE,QAAQC,GAAR,CAAY,qBAAWC,MAAX,CAAkBJ,GAAlB,CAAZ,CAAP;AACH","file":"index.js","sourcesContent":["\nimport prettyjson from 'prettyjson';\nimport JiraApi from 'jira-client';\nimport TapsterJira from './TapsterJira';\nimport config from '../config';\nimport inquirer from 'inquirer';\n\n// Pretty Json options\nconst jsonOptions = {\n    noColor: false\n};\n\n// Init JIRAClient\nconst jr = new JiraApi(config['jira-client-settings']);\nconst Jira = new TapsterJira(jr);\nlet projects = Jira.getProjects();\nlet ticket = {};\n\n// get ticket details from user input, passing in the processor\ngetTicketDetails(Jira.createIssue);\n\n\nfunction getTicketDetails(cb) {\n    \"use strict\";\n\n    let prompts = [];\n    projects.then(function (response) {\n        \"use strict\";\n        let arr = [];\n        for (var i = 0; i < response.length; i++) {\n            arr.push({value: response[i].key, name: response[i].name});\n        }\n\n        // projects\n        prompts.push({\n            type   : \"list\",\n            name   : \"project\",\n            message: \"Choose JIRA project\",\n            choices: arr,\n            default: config['jira-client-settings']['projectKey']\n        });\n\n        // issue types\n        prompts.push({\n            type   : \"list\",\n            name   : \"type\",\n            message: \"Choose type\",\n            choices: config['jira-issue-types'],\n            default: config['jira-client-settings']['defaultIssueType']\n        });\n\n        // subject\n        prompts.push({\n            type   : 'string',\n            name   : 'subject',\n            message: 'Subject'\n        });\n        // description\n        prompts.push({\n            type   : 'string',\n            name   : 'description',\n            message: 'Description'\n        });\n        prompts.push({\n            type   : 'string',\n            name   : 'assignee',\n            message: 'assignee',\n            default: config['jira-client-settings']['username']\n        });\n\n        inquirer.prompt(prompts).then(function (answers) {\n            if (answers) {\n                Jira.createIssue(answers.type, answers.project, answers.subject, answers.description, (config['jira-project-settings']['shouldSetAssignee']) ? answers.assignee : null).then(function (response) {\n                    print(response);\n                }).catch(err => {\n                    errorHandler(err.message);\n                });\n            } else {\n                errorHandler('Something went wrong');\n            }\n        });\n\n    });\n}\n\n\nfunction print(msg) {\n    \"use strict\";\n    return console.log(prettyjson.render(msg));\n}\nfunction errorHandler(err) {\n    \"use strict\";\n    return console.log(prettyjson.render(err));\n}"]}